<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[bubble sky]]></title>
  <subtitle><![CDATA[Coding world, changing world ^_^]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://madreambubble.github.io/"/>
  <updated>2015-05-10T15:01:34.455Z</updated>
  <id>http://madreambubble.github.io/</id>
  
  <author>
    <name><![CDATA[bubble]]></name>
    <email><![CDATA[madreambubble@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[个性化你的Hexo]]></title>
    <link href="http://madreambubble.github.io/2015/05/08/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%BD%A0%E7%9A%84Hexo/"/>
    <id>http://madreambubble.github.io/2015/05/08/个性化你的Hexo/</id>
    <published>2015-05-08T14:09:02.000Z</published>
    <updated>2015-05-10T15:01:34.455Z</updated>
    <content type="html"><![CDATA[<p>注意：<br>1.修改配置文件时注意<code>YAML语法</code>，参数<code>冒号:</code>后一定要留<code>空格</code><br>2.若出现中文乱码请修改文件编码格式为<code>UTF-8</code></p>
<h1 id="hexo目录介绍">hexo目录介绍</h1><p>默认目录结构：</p>
<pre><code>.
├── .deploy <span class="preprocessor">#执行hexo deploy命令部署到GitHub上的内容目录</span>
├── <span class="keyword">public</span> <span class="preprocessor">#执行hexo generate命令，输出的静态网页内容目录</span>
├── scaffolds <span class="preprocessor">#layout模板文件目录，其中的md文件可以添加编辑</span>
├── scripts <span class="preprocessor">#扩展脚本目录，这里可以自定义一些javascript脚本</span>
├── source <span class="preprocessor">#文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。</span>
|   ├── _drafts <span class="preprocessor">#草稿文章</span>
|   └── _posts <span class="preprocessor">#发布文章</span>
├── themes <span class="preprocessor">#主题文件目录</span>
├── _config.yml <span class="preprocessor">#全局配置文件，大多数的设置都在这里</span>
└── <span class="keyword">package</span>.json <span class="preprocessor">#应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮</span>
</code></pre><h1 id="插件plugins">插件plugins</h1><p><a href="http://hexo.io/plugins/" target="_blank" rel="external">Hexo插件</a></p>
<h2 id="安装插件">安装插件</h2><pre><code>$ npm <span class="operator"><span class="keyword">install</span> &lt;<span class="keyword">plugin</span>-name&gt; <span class="comment">--save</span>
$ npm <span class="keyword">update</span></span>
</code></pre><h2 id="启用插件">启用插件</h2><p>修改hexo目录下的<code>_config.yml</code>，添加：</p>
<pre><code>plugins:
- plugin-<span class="property">name</span>
</code></pre><h2 id="升级插件">升级插件</h2><pre><code><span class="built_in">npm</span> update
</code></pre><h2 id="卸载插件">卸载插件</h2><pre><code>npm <span class="operator"><span class="keyword">uninstall</span> &lt;<span class="keyword">plugin</span>-name&gt;</span>
</code></pre><h2 id="常用插件安装与配置">常用插件安装与配置</h2><p>首页文章数量，存档，分类，本地服务器代理，发布器，更新，rss等插件</p>
<pre><code>npm <span class="operator"><span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-archive <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-category <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-deployer-heroku <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-deployer-rsync <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-deployer-openshift <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-renderer-marked@<span class="number">0.2</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-renderer-stylus@<span class="number">0.2</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save</span></span>
</code></pre><p>装完之后去全局配置文件 <code>\hexo\_config.yml</code> 修改参数</p>
<pre><code>index_generator:
  per_page: <span class="number">10</span> ##首页默认<span class="number">10</span>篇文章标题 如果值为<span class="number">0</span>不分页

archive_generator:
  per_page: <span class="number">10</span> ##归档页面默认<span class="number">10</span>篇文章标题
  yearly: true  ##生成年视图
  monthly: true ##生成月视图

tag_generator:
  per_page: <span class="number">10</span> ##标签分类页面默认<span class="number">10</span>篇文章

category_generator: 
   per_page: <span class="number">10</span> ###分类页面默认<span class="number">10</span>篇文章

feed:
  type: atom #<span class="hexcolor">#fee</span>d类型 atom或者rss2
  path: atom<span class="class">.xml</span> #<span class="hexcolor">#fee</span>d路径
  limit: <span class="number">20</span>  #<span class="hexcolor">#fee</span>d文章最小数量
</code></pre><p>-多部署</p>
<pre><code>deploy:
  type: git
  message: update  #<span class="id">#git</span> message建议默认字段update 可以自定义
  repository: 
  github: &lt;repository url&gt;,[branch] #<span class="id">#github</span> 仓库地址和分支
  gitcafe: &lt;repository url&gt;,[branch] #<span class="id">#gitcafe</span> 仓库地址和分支
</code></pre><h1 id="README文件">README文件</h1><p>在<code>\hexo\source</code>新建<code>README</code>文件（注意不要带后缀），用文本编辑器打开编辑内容。</p>
<h1 id="404页面">404页面</h1><p>在<code>hexo\source</code>下新建<code>404</code>文件（不要带后缀），插入代码即可。<br><a href="http://www.qq.com/404/" target="_blank" rel="external">腾讯公益</a></p>
<h1 id="整站配置">整站配置</h1><h2 id="编辑\hexo\_config-yml文件">编辑<code>\hexo\_config.yml</code>文件</h2><pre><code><span class="preprocessor"># Hexo Configuration</span>
<span class="preprocessor">## Docs: http://zespia.tw/hexo/docs/configure.html</span>
<span class="preprocessor">## Source: https://github.com/tommy351/hexo/</span>

<span class="preprocessor"># Site #整站的基本信息</span>
<span class="label">title:</span> bubble sky <span class="preprocessor">#网站标题，站点左上角</span>
<span class="label">subtitle:</span> Coding world, changing world ^_^ <span class="preprocessor">#副标题，站点左上角</span>
<span class="label">description:</span> Coding world, changing world ^_^ <span class="preprocessor">#给搜索引擎看的，对站点的描述，可以自定义，在生成html中的head-&gt;meta中可看到</span>
<span class="label">author:</span> bubble <span class="preprocessor">#网站作者，在站点左下角可以看到</span>
<span class="label">email:</span> <span class="preprocessor">#你的联系邮箱</span>
<span class="label">language:</span> <span class="built_in">zh</span>-CN <span class="preprocessor">#中文</span>

<span class="preprocessor"># URL #这项暂不配置，绑定域名后，欲创建sitemap.xml需要配置该项</span>
<span class="preprocessor">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span>
<span class="label">url:</span> http://madreambubble.github.io  <span class="preprocessor">#你的域名</span>
<span class="label">root:</span> /
<span class="label">permalink:</span> :year/:month/:day/:title/
<span class="label">tag_dir:</span> tags
<span class="label">archive_dir:</span> archives
<span class="label">category_dir:</span> categories

<span class="preprocessor"># Writing 文章布局、写作格式的定义，不修改</span>
<span class="label">new_post_name:</span> :title.md <span class="preprocessor"># File name of new posts</span>
<span class="label">default_layout:</span> post
<span class="label">auto_spacing:</span> false <span class="preprocessor"># Add spaces between asian characters and western characters</span>
<span class="label">titlecase:</span> false <span class="preprocessor"># Transform title into titlecase</span>
<span class="label">max_open_file:</span> <span class="number">100</span>
<span class="label">filename_case:</span> <span class="number">0</span>
<span class="label">highlight:</span> <span class="preprocessor">#代码高亮</span>
  enable: true <span class="preprocessor">#是否启用</span>
  backtick_code_block: true
  line_number: true <span class="preprocessor">#是否显示行号</span>
  tab_replace:

<span class="preprocessor"># Category &amp; Tag</span>
<span class="label">default_category:</span> uncategorized
<span class="label">category_map:</span>
<span class="label">tag_map:</span>

<span class="preprocessor"># Archives 默认值为2，这里都修改为1，相应页面就只会列出标题，而非全文</span>
<span class="preprocessor">## 2: Enable pagination</span>
<span class="preprocessor">## 1: Disable pagination</span>
<span class="preprocessor">## 0: Fully Disable</span>
<span class="label">archive:</span> <span class="number">1</span>
<span class="label">category:</span> <span class="number">1</span>
<span class="label">tag:</span> <span class="number">1</span>

<span class="preprocessor"># Server 不修改</span>
<span class="preprocessor">## Hexo uses Connect as a server</span>
<span class="preprocessor">## You can customize the logger format as defined in</span>
<span class="preprocessor">## http://www.senchalabs.org/connect/logger.html</span>
<span class="label">port:</span> <span class="number">4000</span>
<span class="label">logger:</span> false
<span class="label">logger_format:</span>

<span class="preprocessor"># Date / Time format 日期格式</span>
<span class="preprocessor">## Hexo uses Moment.js to parse and display date</span>
<span class="preprocessor">## You can customize the date format as defined in</span>
<span class="preprocessor">## http://momentjs.com/docs/#/displaying/format/</span>
<span class="label">date_format:</span> MMM D YYYY <span class="preprocessor">#文章发表时间的显示格式，可在上面链接里按照格式修改</span>
<span class="label">time_format:</span> H:mm:ss

<span class="preprocessor"># Pagination #每页显示文章数，可以自定义</span>
<span class="preprocessor">## Set per_page to 0 to disable pagination</span>
<span class="label">per_page:</span> <span class="number">10</span> <span class="preprocessor">#每页显示10篇文章</span>
<span class="label">pagination_dir:</span> page

<span class="preprocessor"># Disqus 社会化评论disqus，我使用多说，在主题中配置</span>
<span class="label">disqus_shortname:</span>

<span class="preprocessor"># Extensions 这里配置站点所用主题和插件，暂默认，后面会介绍怎么修改</span>
<span class="preprocessor">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</span>
<span class="preprocessor">## Themes: https://github.com/tommy351/hexo/wiki/Themes</span>
<span class="label">theme:</span> light
<span class="label">exclude_generator:</span>
<span class="label">plugins:</span>
- hexo-generator-feed
- hexo-generator-sitemap

<span class="preprocessor"># Deployment 站点部署到github要配置</span>
<span class="preprocessor">## Docs: http://zespia.tw/hexo/docs/deploy.html</span>
<span class="label">deploy:</span>
  type: git
  repository: git@github.com:username/username.github.io.git
  branch: master
</code></pre><p>执行命令<code>hexo g</code>，<code>hexo s</code>，打开<code>localhost:4000</code>查看效果。</p>
<h2 id="新建文章时默认生成categories项">新建文章时默认生成categories项</h2><p>在<code>hexo\scaffolds\post.md</code>中，添加一行<code>categories:</code>。同理可应用在<code>page.md</code>和<code>photo.md</code>。</p>
<h2 id="win7中新建文章后自动打开文件">win7中新建文章后自动打开文件</h2><p>参考了几个博主的方法，但貌似都是苹果机的，本人对脚本语言完全不懂，琢磨尝试了几次，竟然成功了~<br><a href="https://github.com/hexojs/hexo/issues/1007" target="_blank" rel="external">hexo作者给出的代码</a>：</p>
<pre><code><span class="keyword">var</span> spawn = <span class="built_in">require</span>(<span class="string">'child_process'</span>).spawn;

<span class="comment">// Hexo 2.x</span>
hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span><span class="params">(path)</span></span>{
  spawn(<span class="string">'vi'</span>, [path]);
});

<span class="comment">// Hexo 3</span>
hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span><span class="params">(data)</span></span>{
  spawn(<span class="string">'vi'</span>, [data.path]);
});
</code></pre><p>稍加修改即可，如下：</p>
<ul>
<li>在<code>hexo\scripts</code>目录新建文件<code>open_new.js</code>，在其中捕获new事件，若scripts文件夹不存在可手动创建。</li>
<li><p>添加代码：</p>
<pre><code>//hexo new <span class="string">"post"</span>后自动用默认编辑器打开文件
var exec = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;

/* Hexo <span class="number">2.</span>x
hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span><span class="params">(path)</span></span>{
  exec(<span class="string">'start'</span> + path);
});
*/

// Hexo <span class="number">3</span>
hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span><span class="params">(data)</span></span>{
  exec(<span class="string">'start '</span> + data.path);
});
</code></pre><p>我是Hexo 3版本，测试成功~但2.x版本尚未测试，猜想可能代码差不多是这样吧，安装2.x版本的朋友可以试试。</p>
</li>
</ul>
<h1 id="主题theme">主题theme</h1><p><a href="http://hexo.io/themes/" target="_blank" rel="external">Hexo主题</a></p>
<h2 id="下载主题">下载主题</h2><pre><code>$ git clone <span class="tag">&lt;<span class="title">repository</span>&gt;</span> themes/<span class="tag">&lt;<span class="title">theme-name</span>&gt;</span>
</code></pre><p>如：</p>
<pre><code><span class="variable">$ </span>git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/hexojs</span><span class="regexp">/hexo-theme-light.git themes/light</span>
</code></pre><h2 id="启用主题">启用主题</h2><p>修改hexo目录下的<code>_config.yml</code>，启用主题：</p>
<pre><code><span class="attribute">theme</span>: <span class="string">theme-name</span>
</code></pre><p>如：</p>
<pre><code><span class="attribute">theme</span>: <span class="string">light</span>
</code></pre><h2 id="主题配置">主题配置</h2><p>编辑文件<code>\hexo\themes\light\_config.yml</code></p>
<pre><code><span class="attribute">menu</span>: #站点右上角导航栏，暂时默认，后面介绍修改
  首页: /
  存档: /archives
  关于: /about
  <span class="attribute">ToDo</span>: /todolist

<span class="attribute">widgets</span>: #站点右边栏，暂时默认，后面介绍修改和添加
- search
- category
- tagcloud
- weibo
- blogroll

<span class="attribute">excerpt_link</span>: 阅读全文 #替换为中文

<span class="attribute">plugins</span>: 

<span class="attribute">twitter</span>: #右边栏要显示twitter展示的话，需要在此设置
  <span class="attribute">username</span>: moxie198
  <span class="attribute">show_replies</span>: false
  <span class="attribute">tweet_count</span>: <span class="number">5</span>

<span class="attribute">addthis</span>: #SNS分享，暂时默认，后面会介绍
  <span class="attribute">enable</span>: true
  <span class="attribute">pubid</span>:
  <span class="attribute">facebook</span>: true
  <span class="attribute">twitter</span>: true
  <span class="attribute">google</span>: true
  <span class="attribute">pinterest</span>: true

<span class="attribute">fancybox</span>: true #图片效果，默认

<span class="attribute">google_analytics</span>: #要使用google_analytics进行统计的话，这里需要配置ID，暂时默认，后面介绍
<span class="attribute">rss</span>:  #生成RSS，需要配置路径，暂时默认，后面介绍
</code></pre><h3 id="修改局部页面">修改局部页面</h3><p>页面展现的全部逻辑都在每个主题中控制，源代码在<code>hexo\themes\themename\</code>中</p>
<pre><code>.
├── languages  <span class="preprocessor">#多语言</span>
|   ├── <span class="keyword">default</span>.yml <span class="preprocessor">#默认语言</span>
|   └── zh-CN.yml  <span class="preprocessor">#中文语言</span>
├── <span class="keyword">layout</span> <span class="preprocessor">#布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</span>
|   ├── _partial   <span class="preprocessor">#局部的布局，此目录下的*.ejs是对头尾等局部的控制</span>
|   └── _widget <span class="preprocessor">#小挂件的布局，页面下方小挂件的控制</span>
├── source <span class="preprocessor">#源码</span>
|   ├── css <span class="preprocessor">#css源码 </span>
|   |   ├── _base  <span class="preprocessor">#*.styl基础css</span>
|   |   ├── _partial   <span class="preprocessor">#*.styl局部css</span>
|   |   ├── fonts  <span class="preprocessor">#字体</span>
|   |   ├── images <span class="preprocessor">#图片</span>
|   |   └── style.styl <span class="preprocessor">#*.styl引入需要的css源码</span>
|   ├── fancybox   <span class="preprocessor">#fancybox效果源码</span>
|   └── js <span class="preprocessor">#javascript源代码</span>
├── _config.yml <span class="preprocessor">#主题配置文件</span>
└── README.md  <span class="preprocessor">#用GitHub的都知道</span>
</code></pre><p>如果你需要修改头部，直接修改<code>hexo\themes\themename\layout\_partial\header.ejs</code>，比如头上加个搜索框：</p>
<pre><code>&lt;div&gt;
&lt;form <span class="variable">class=</span><span class="string">"search"</span> <span class="variable">action=</span><span class="string">"//google.com/search"</span> <span class="variable">method=</span><span class="string">"get"</span> <span class="variable">accept-charset=</span><span class="string">"utf-8"</span>&gt;
 &lt;input <span class="variable">type=</span><span class="string">"search"</span> <span class="variable">name=</span><span class="string">"q"</span> <span class="variable">id=</span><span class="string">"search"</span> <span class="variable">autocomplete=</span><span class="string">"off"</span> <span class="variable">autocorrect=</span><span class="string">"off"</span> <span class="variable">autocapitalize=</span><span class="string">"off"</span> <span class="variable">maxlength=</span><span class="string">"20"</span> <span class="variable">placeholder=</span><span class="string">"Search"</span> /&gt;
 &lt;input <span class="variable">type=</span><span class="string">"hidden"</span> <span class="variable">name=</span><span class="string">"q"</span> <span class="variable">value=</span><span class="string">"site:&lt;%- config.url.replace(/^https?:\/\//, '') %&gt;"</span>&gt;
&lt;/form&gt;
&lt;/div&gt;
</code></pre><p>将如上代码加入即可，您需要修改css以便这个搜索框比较美观。<br>再如，你要修改页脚版权信息，直接编辑<code>hexo\themes\themename\layout\_partial\footer.ejs</code>。同理，你需要修改css，直接去修改对应位置的styl文件。</p>
<h3 id="社会化评论系统——多说">社会化评论系统——多说</h3><p>hexo默认使用国外比较流行的disqus，国内多使用“多说”。步骤非常简单：</p>
<ol>
<li>在<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>进行注册，获得通用代码。</li>
<li><p>将通用代码粘贴到<code>themes\themename\layout\_partial\comment.ejs</code>里面，如下：</p>
<pre><code><span class="xml"></span>&lt;%<span class="ruby"> <span class="keyword">if</span> ( page.comments){ </span>%&gt;<span class="xml">
    <span class="tag">&lt;<span class="title">section</span> <span class="attribute">id</span>=<span class="value">"comment"</span>&gt;</span>
        #通用代码
    <span class="tag">&lt;/<span class="title">section</span>&gt;</span>
</span>&lt;%<span class="ruby"> } </span>%&gt;<span class="xml"></span>
</code></pre><p>其中<code>&lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;请将此处替换成文章在你的站点中的ID&quot; data-title=&quot;请替换成文章的标题&quot; data-url=&quot;请替换成文章的网址&quot;&gt;&lt;/div&gt;</code>替换为<code>&lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;&lt;%- config.root %&gt;&lt;%- item.path%&gt;&quot; data-title=&quot;&lt;%- item.title %&gt;&quot; data-url=&quot;&lt;%- item.permalink %&gt;&quot;&gt;&lt;/div&gt;</code></p>
</li>
</ol>
<h3 id="页面导航">页面导航</h3><p>在<code>themes\themename\layout\_partial\comment.ejs</code>文件中，加入一段代码，如下：</p>
<pre><code><span class="xml"></span>&lt;%<span class="ruby"> <span class="keyword">if</span> ( page.comments){ </span>%&gt;<span class="xml">

 <span class="tag">&lt;<span class="title">nav</span> <span class="attribute">id</span>=<span class="value">"pagination"</span> &gt;</span>
    </span>&lt;%<span class="ruby"> <span class="keyword">if</span> (page.prev) { </span>%&gt;<span class="xml">
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> config.root </span>%&gt;<span class="xml"><span class="tag"><span class="value"></span></span></span>&lt;%-<span class="ruby"> page.prev.path </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span> <span class="attribute">class</span>=<span class="value">"alignleft prev"</span> &gt;</span></span>&lt;%=<span class="ruby"> _<span class="number">_</span>(<span class="string">'prev'</span>) </span>%&gt;<span class="xml"><span class="tag">&lt;/<span class="title">a</span>&gt;</span>
    </span>&lt;%<span class="ruby"> } </span>%&gt;<span class="xml">
    </span>&lt;%<span class="ruby"> <span class="keyword">if</span> (page.<span class="keyword">next</span>) { </span>%&gt;<span class="xml">
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> config.root </span>%&gt;<span class="xml"><span class="tag"><span class="value"></span></span></span>&lt;%-<span class="ruby"> page.<span class="keyword">next</span>.path </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span> <span class="attribute">class</span>=<span class="value">"alignright next"</span> &gt;</span></span>&lt;%=<span class="ruby"> _<span class="number">_</span>(<span class="string">'next'</span>) </span>%&gt;<span class="xml"><span class="tag">&lt;/<span class="title">a</span>&gt;</span>
    </span>&lt;%<span class="ruby"> } </span>%&gt;<span class="xml">
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"clearfix"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;/<span class="title">nav</span>&gt;</span>

<span class="tag">&lt;<span class="title">section</span> <span class="attribute">id</span>=<span class="value">"comment"</span>&gt;</span></span>
</code></pre><p>light主题默认显示为“上一页”“下一页”，若想更改显示的文字，在<code>hexo\themes\light\languages</code>中你选择的语言包内修改：</p>
<pre><code><span class="attribute">prev</span>: <span class="string">上一篇</span>
<span class="attribute">next</span>: <span class="string">下一篇</span>
</code></pre><h3 id="百度分享">百度分享</h3><p>到<a href="http://share.baidu.com/" target="_blank" rel="external">百度分享</a>获得代码，在<code>themes/themename/layout/_partial/article.ejs</code>中，将<code>&lt;%-partial(&#39;post/share&#39;)%&gt;</code>删掉，替换为百度分享的代码。</p>
<h3 id="添加网站图标">添加网站图标</h3><p>在<code>themes/themename/layout/_partial/head.ejs</code>里将<code>&lt;link href=&quot;&lt;%- config.root %&gt;favicon.png&quot; rel=&quot;icon&quot;&gt;</code>替换为<code>&lt;link href=&quot;&lt;%- config.root %&gt;favicon.ico&quot; rel=&quot;icon&quot; type=&quot;image/x-ico&quot;&gt;</code>。将<code>favicon.ico</code>图标文件放在<code>hexo\source</code>目录下。<br>制作图标的网站：<a href="http://www.faviconer.com" target="_blank" rel="external">faviconer</a>。</p>
<h3 id="添加分类、标签云widget">添加分类、标签云widget</h3><p>在<code>themes/themename/_config.yml</code>中，添加如下：</p>
<pre><code>widgets:
-<span class="ruby"> category
</span>-<span class="ruby"> tagcloud</span>
</code></pre><h3 id="添加友情链接widget">添加友情链接widget</h3><p>在<code>themes/themename/layout/_widget</code>中新建名为<code>blogroll.ejs</code>的文件，编辑内容如下：</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"widget tag"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h3</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="title">h3</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ul</span> <span class="attribute">class</span>=<span class="value">"entry"</span>&gt;</span> #以下为添加友情链接时要修改的地方
    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"网站地址"</span> <span class="attribute">title</span>=<span class="value">"网站名"</span>&gt;</span>你想显示的名字<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>每次更改友链时编辑<code>&lt;ul&gt;&lt;/ul&gt;</code>之间的内容即可，其中<code>&lt;li&gt;&lt;a href=&quot;网站地址&quot; title=&quot;网站名&quot;&gt;你想显示的名字&lt;/a&gt;&lt;/li&gt;</code>为添加友情链接的格式，如</p>
<pre><code><span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://madreambubble.github.io/"</span> <span class="attribute">title</span>=<span class="value">"bubble sky"</span>&gt;</span>bubble's blog<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
</code></pre><p>一个链接一行。<br>然后在<code>themes/themename/_config.yml</code>中，添加如下：</p>
<pre><code>widgets:
<span class="bullet">- </span>blogroll
</code></pre><h3 id="添加统计">添加统计</h3><p><a href="http://tongji.baidu.com/web/welcome/login" target="_blank" rel="external">百度统计</a>，<a href="http://www.google.com/analytics/" target="_blank" rel="external">谷歌统计</a><br>以百度统计、modernist主题为例，介绍如何添加。<br>编辑文件<code>hexo\themes\modernist\_config.yml</code>，增加配置选项：</p>
<pre><code><span class="string">baidu_tongji:</span> <span class="literal">true</span>
</code></pre><p>新建文件<code>hexo\themes\modernist\layout\_partial\baidu_tongji.ejs</code>，内容如下：</p>
<pre><code><span class="xml"></span>&lt;%<span class="ruby"> <span class="keyword">if</span> (theme.baidu_tongji){ </span>%&gt;<span class="xml">
<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="vala">
<span class="preprocessor">#你的百度统计代码</span>
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</span>&lt;%<span class="ruby"> } </span>%&gt;<span class="xml"></span>
</code></pre><p>注册并登录百度统计获取你的统计代码。</p>
<p>编辑文件<code>hexo\themes\modernist\layout\_partial\head.ejs</code>，在<code>/head</code>之前增加：</p>
<pre><code>&lt;<span class="preprocessor">%</span>- partial<span class="comment">('baidu_tongji')</span> <span class="preprocessor">%</span>&gt;
</code></pre><p>重新生成并部署你的站点。</p>
<h3 id="自定义挂件">自定义挂件</h3><p>除了默认已提供的挂件外，你还可以自定义自己的小挂件，在<code>hexo\themes\modernist\layout\_widget\</code>下，新建自己的ejs文件，如<code>myWidget.ejs</code>，然后在配置文件<code>hexo\themes\modernist\_config.yml</code>中配置。</p>
<pre><code><span class="label">widgets:</span>
  - myWidget
</code></pre><p>用上述方法可以添加新浪微博小挂件。</p>
<ul>
<li>生成自己的<a href="http://app.weibo.com/tool/weiboshow" target="_blank" rel="external">微博组件</a>。</li>
<li>新建<code>hexo\themes\themename\layout\_widget\weibo.ejs</code>文件。</li>
<li><p>配置<code>hexo\themes\themename\_config.yml</code>：</p>
<pre><code>widgets:
<span class="bullet">- </span>weibo
</code></pre></li>
</ul>
<h3 id="导航栏添加“About”">导航栏添加“About”</h3><p>执行命令：</p>
<pre><code>hexo <span class="keyword">new</span> page <span class="string">"About"</span>
</code></pre><ol>
<li>到<code>source\About\index.md</code>编辑内容。</li>
<li><p>在<code>themes\light\_config.yml</code>中，添加如下：</p>
<pre><code><span class="attribute">menu</span>:
  <span class="attribute">About</span>: /about
</code></pre></li>
</ol>
<p>上述步骤，也可以手工生成，在<code>hexo\source\</code>下手工新建<code>About</code>和<code>index.md</code>也是完全等价的。</p>
<h3 id="添加fork_me_on_github">添加<code>fork me on github</code></h3><p><a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="external">github官方教程</a>，把代码插入到任意一个全局的模板文件中就行，比如layout.ejs的末尾。</p>
<h3 id="添加RSS">添加RSS</h3><p>hexo提供了RSS的生成插件，需要手动安装和设置。步骤如下：</p>
<ol>
<li>安装RSS插件到本地：<code>npm install hexo-generator-feed</code></li>
<li><p>开启RSS功能：编辑<code>hexo/_config.yml</code>，添加如下代码：</p>
<pre><code>plugins:
<span class="bullet">- </span>hexo-generator-feed
</code></pre></li>
<li>在站点添加链接：<br>在<code>themes\light\_config.yml</code>中，编辑 <code>rss: /atom.xml</code><br>在<code>themes\light\layout\_partial\header.ejs</code>中，<code>&lt;ul&gt;</code> <code>&lt;/ul&gt;</code>之间，添加一行代码<code>&lt;li&gt; &lt;a href=&quot;/atom.xml&quot;&gt;RSS&lt;/a&gt; &lt;/li&gt;</code><br>启动服务器，用浏览器打开<code>http://localhost:4000/atom.xml</code>，就可以看到RSS已经生效了。</li>
</ol>
<h3 id="添加sitemap">添加sitemap</h3><ol>
<li>安装sitemap到本地：<code>npm install hexo-generator-sitemap</code></li>
<li><p>开启sitemap功能：编辑<code>hexo/_config.yml</code>，添加如下代码：</p>
<pre><code>plugins:
<span class="bullet">- </span>hexo-generator-sitemap
</code></pre></li>
</ol>
<p>不过，sitemap的初衷是给搜索引擎看的，为了提高搜索引擎对自己站点的收录效果，我们最好手动到google和百度等搜索引擎提交sitemap.xml。<br>启动服务器，用浏览器打开<code>http://localhost:4000/sitemap.xml</code>，就可以看到sitemap已经生效了。</p>
<h3 id="添加站内搜索">添加站内搜索</h3><ul>
<li><p>百度搜索<br>Hexo默认使用Google搜索，可设置为百度搜索。<br>打开<code>themes/themename/layout/_widget/search.ejs</code>文件，里面内容替换为：</p>
<pre><code><span class="xml"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"search"</span>&gt;</span>
  <span class="tag">&lt;<span class="title">form</span> <span class="attribute">action</span>=<span class="value">"//baidu.com/baidu"</span> <span class="attribute">method</span>=<span class="value">"get"</span> <span class="attribute">accept-charset</span>=<span class="value">"utf-8"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"search"</span> <span class="attribute">name</span>=<span class="value">"word"</span> <span class="attribute">results</span>=<span class="value">"0"</span> <span class="attribute">placeholder</span>=<span class="value">"</span></span></span>&lt;%=<span class="ruby"> _<span class="number">_</span>(<span class="string">'search'</span>) </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">name</span>=<span class="value">"si"</span> <span class="attribute">value</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> config.url.replace(<span class="regexp">/^https?:\/\//</span>, <span class="string">''</span>) </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">tn</span> <span class="attribute">type</span>=<span class="value">hidden</span> <span class="attribute">value</span>=<span class="value">"bds"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">cl</span> <span class="attribute">type</span>=<span class="value">hidden</span> <span class="attribute">value</span>=<span class="value">"3"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">ct</span> <span class="attribute">type</span>=<span class="value">hidden</span> <span class="attribute">value</span>=<span class="value">"2097152"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">s</span> <span class="attribute">type</span>=<span class="value">hidden</span> <span class="attribute">value</span>=<span class="value">"on"</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">form</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span>
</code></pre></li>
<li>Swiftype搜索</li>
</ul>
<ol>
<li>去<a href="https://swiftype.com/" target="_blank" rel="external">Swiftype</a>注册</li>
<li><code>CREATE SEARCH ENGINE</code>创建一个站内搜索</li>
<li>填上相应的信息后，Swiftype就开始抓取了</li>
<li>点<code>INSTALL</code>安装，根据自己的喜好设置。</li>
<li>选择左侧的<code>SWIFTYPE INSTALL CODE</code>，复制生成的代码，覆盖<code>themes/themename/layout/_widget/search.ejs</code>文件即可。</li>
</ol>
<h3 id="添加返回顶部按钮">添加返回顶部按钮</h3><ol>
<li><p>添加html代码<br>在<code>/themes/themename/layout/_partial</code>文件夹新建文件<code>totop.ejs</code>，并向其中加入如下代码：</p>
 <div id="totop" style="position:fixed;bottom:150px;right:50px;cursor: pointer;"><br> <a title="返回顶部"><img src="/img/scrollup.png"></a><br> </div></li>
<li><p>添加js代码<br>在<code>/themes/themename/source/js</code>文件夹新建文件<code>totop.js</code>，将如下代码复制其中：</p>
<pre><code><span class="list">(<span class="keyword">function</span><span class="list">($)</span> <span class="collection">{
    // When to show the scroll link
    // higher number = scroll link appears further down the page
    var upperLimit = <span class="number">1000</span><span class="comment">;</span>

    // Our scroll link element
    var scrollElem = $<span class="list">(<span class="keyword">'#totop'</span>)</span><span class="comment">;</span>

    // Scroll to top speed
    var scrollSpeed = <span class="number">500</span><span class="comment">;</span>

    // Show and hide the scroll to top link based on scroll position
    scrollElem.hide<span class="list">()</span><span class="comment">;</span>
    $<span class="list">(<span class="keyword">window</span>)</span>.scroll<span class="list">(<span class="keyword">function</span> <span class="list">()</span> <span class="collection">{
        var scrollTop = $<span class="list">(<span class="keyword">document</span>)</span>.scrollTop<span class="list">()</span><span class="comment">;</span>
        if <span class="list">( scrollTop &gt; upperLimit )</span> <span class="collection">{
            $<span class="list">(<span class="keyword">scrollElem</span>)</span>.stop<span class="list">()</span>.fadeTo<span class="list">(<span class="number">300</span>, <span class="number">1</span>)</span><span class="comment">; // fade back in</span>
        }</span>else<span class="collection">{
            $<span class="list">(<span class="keyword">scrollElem</span>)</span>.stop<span class="list">()</span>.fadeTo<span class="list">(<span class="number">300</span>, <span class="number">0</span>)</span><span class="comment">; // fade out</span>
        }</span>
    }</span>)</span><span class="comment">;</span>

    // Scroll to top animation on click
    $<span class="list">(<span class="keyword">scrollElem</span>)</span>.click<span class="list">(<span class="keyword">function</span><span class="list">()</span><span class="collection">{
        $<span class="list">(<span class="keyword">'html</span>, body')</span>.animate<span class="list">(<span class="collection">{scrollTop:0}</span>, scrollSpeed)</span><span class="comment">; return false;</span>
    }</span>)</span><span class="comment">;</span>
}</span>)</span><span class="list">(<span class="keyword">jQuery</span>)</span><span class="comment">;</span>
</code></pre><p>可以对upperLimit和scrollSpeed参数进行修改，控制显示位置和回滚速度。</p>
</li>
<li><p>添加文件引用<br>在文件<code>/themes/themename/layout/_partial/after_footer.ejs</code>末尾添加以下两行代码：</p>
<pre><code><span class="xml"></span>&lt;%-<span class="ruby"> partial(<span class="string">'totop'</span>) </span>%&gt;<span class="xml">
<span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> config.root </span>%&gt;<span class="xml"><span class="tag"><span class="value">js/totop.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span>
</code></pre></li>
<li>添加按钮图片<br>将图片<img src="http://ww3.sinaimg.cn/large/0067jhJ4gw1erz8cbug7wj301e01e3y9.jpg" alt="">复制到<code>\themes\themename\source\img</code>目录下，文件名为<code>scrollup.png</code>，页面足够长时，就看到按钮出现了。</li>
</ol>
<h3 id="添加文章目录">添加文章目录</h3><ol>
<li><p>修改主题的ejs文件<br>我们首先要编辑文章显示页面的模板，也就是<code>themes/themename/layout/_partial/article.ejs</code>文件。为了将目录生成在正文之前，我们首先在这个文件中找到<code>&lt;%- post.content %&gt;</code>类似代码，并在这一行之前加入如下代码：</p>
<pre><code><span class="xml"><span class="comment">&lt;!-- Table of Contents --&gt;</span>
</span>&lt;%<span class="ruby"> <span class="keyword">if</span> (!index &amp;&amp; post.toc){ </span>%&gt;<span class="xml">
  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"toc"</span> <span class="attribute">class</span>=<span class="value">"toc-article"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">strong</span> <span class="attribute">class</span>=<span class="value">"toc-title"</span>&gt;</span>文章目录<span class="tag">&lt;/<span class="title">strong</span>&gt;</span>
    </span>&lt;%-<span class="ruby"> toc(post.content) </span>%&gt;<span class="xml">
  <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</span>&lt;%<span class="ruby"> } </span>%&gt;<span class="xml"></span>
</code></pre><p>if语句中有两个条件，!index是为了不在首页的文章摘要中生成目录，post.toc确保了只在显式地标记了toc: true的文章中生成目录。若这两个条件满足，则创建一个目录的<code>&lt;div&gt;</code>。</p>
</li>
<li><p>为目录编写CSS文件<br>要指定目录的样式，修改文件<code>themes/themename/source/css/_partial/article.styl</code>。在文件的最后，添加如下代码：</p>
<pre><code><span class="comment">/*toc*/</span>
<span class="class">.toc-article</span>
  <span class="attribute">background</span> <span class="hexcolor">#eee</span>
  <span class="attribute">border</span> <span class="number">1px</span> solid <span class="hexcolor">#bbb</span>
  <span class="attribute">border-radius</span> <span class="number">10px</span>
  <span class="attribute">margin</span> <span class="number">1.5em</span> <span class="number">0</span> <span class="number">0.3em</span> <span class="number">1.5em</span>
  <span class="attribute">padding</span> <span class="number">1.2em</span> <span class="number">1em</span> <span class="number">0</span> <span class="number">1em</span>
  <span class="attribute">max-width</span> <span class="number">28%</span>
<span class="class">.toc-title</span>
  <span class="attribute">font-size</span> <span class="number">120%</span>
<span class="id">#toc</span>
  <span class="attribute">line-height</span> <span class="number">1em</span>
  <span class="attribute">font-size</span> <span class="number">0.9em</span>
  <span class="attribute">float</span> <span class="attribute">right</span>
  <span class="class">.toc</span>
    <span class="attribute">padding</span> <span class="number">0</span>
    <span class="attribute">margin</span> <span class="number">1em</span>
    <span class="attribute">line-height</span> <span class="number">1.8em</span>
    <span class="tag">li</span>
      <span class="attribute">list-style-type</span> <span class="attribute">none</span>
  <span class="class">.toc-child</span> 
    <span class="attribute">margin-left</span> <span class="number">1em</span>
</code></pre></li>
</ol>
<ul>
<li>第一段的<code>toc-article</code>指定了目录整个<code>&lt;div&gt;</code>的背景色、边框色、倒角半径、各种间距以及最大的宽度。注意这里最好指定目录的最大宽度，我将其设为了28%，也就是文章正文那个框的宽度的28%，也可以设为一个固定的长度，比如在笔记本电脑上16em就是个不错的宽度，但为了能适配各种不同尺寸的屏幕，最好还是设置为百分比。如果不指定最大宽度，遇到比较长的标题时，生成的目录会非常难看。这个最大宽度的设置是我在网上其他添加目录的方法中没有见到的。</li>
<li>第二段的<code>toc-title</code>指的就是<code>文章目录</code>那四个字，这四个字要比其他字大一些，将其字号设为其他字的120%。</li>
<li>第三段的<code>#toc.toc</code>指定了目录列表的一些细节，将font-size设为0.9em会让目录的字比文章的字稍小一些。最后的<code>.toc-child</code>指定了二级目录的缩进量。</li>
</ul>
<p>再次生成页面，应该已经可以显示比较美观的目录了。<br>此后，只需在你想要显示目录的文章.md开头加上<code>toc: true</code>即可。</p>
<h1 id="速度优化">速度优化</h1><p>由于 Google 被大陆屏蔽，Github 从大陆访问也比较慢，且不太稳定。所以一方面可以把 Blog 迁移到国内，比如Gitcafe提供的免费Page服务，又快又好用，可以参考<a href="http://zipperary.com/2013/11/23/hexo-to-gitcafe/" target="_blank" rel="external">托管博客到gitcafe</a>。</p>
<ol>
<li>把 google 提供的<code>jquery</code>和<code>fonts api</code>全换掉。由于不同的主题其位置不同，最好是搜索一下。<br>Unix/Linux 用户在 shell 中切换到自己的主题目录下面；Windows 用户用 Git Bash 切换到主题目录下面。然后用<code>grep &#39;jquery&#39; -r ./</code>搜索使用 jquery 的位置，如果是用的 google 的，则替换成国内的相应版本，我用的是百度，<code>//libs.baidu.com/jquery/2.0.3/jquery.min.js</code>，<code>//libs.baidu.com/jquery/1.8.0/jquery.min.js</code>。</li>
<li>替换google fonts，同样的方法，<code>grep &#39;fonts&#39; -r ./</code>，找到后替换为<code>//fonts.useso.com/css?family=Lato:400,400italic</code>即可。</li>
</ol>
<h1 id="参考资料">参考资料</h1><ul>
<li><a href="http://zipperary.com/2013/05/29/hexo-guide-3/" target="_blank" rel="external">hexo系列教程：（三）hexo博客的配置、使用</a></li>
<li><a href="http://zipperary.com/2013/05/30/hexo-guide-4/" target="_blank" rel="external">hexo系列教程：（四）hexo博客的优化技巧</a></li>
<li><a href="http://zipperary.com/2013/06/02/hexo-guide-5/" target="_blank" rel="external">hexo系列教程：（五）hexo博客的优化技巧续</a></li>
<li><a href="http://www.winterland.me/2013/11/hexo-scroll2top/" target="_blank" rel="external">为hexo添加scroll to top功能</a></li>
<li><a href="http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="http://yangjian.me/workspace/building-blog-with-hexo/" target="_blank" rel="external">使用hexo搭建博客</a></li>
<li><a href="http://blog.fens.me/hexo-blog-github/" target="_blank" rel="external">Hexo在github上构建免费的Web应用</a></li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a></li>
<li><a href="http://ijiaober.github.io/2014/08/07/hexo/hexo-09/" target="_blank" rel="external">Hexo使用攻略：（九）为Hexo添加百度搜索</a></li>
<li><a href="http://erona.me/2015/02/11/%E4%B8%BALight%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0Swiftype%E6%90%9C%E7%B4%A2/" target="_blank" rel="external">为Light主题添加Swiftype搜索</a></li>
<li><a href="http://www.yehbeats.com/2015/04/06/hexo-topmenu/" target="_blank" rel="external">Hexo，添加返回顶部按钮</a></li>
<li><a href="http://kuangqi.me/tricks/enable-table-of-contents-on-hexo/" target="_blank" rel="external">为Hexo博客添加目录</a></li>
<li><a href="http://kuangqi.me/tricks/open-macdown-when-add-a-new-post/" target="_blank" rel="external">在为Hexo博客添加文章时自动打开编辑器</a></li>
<li><a href="https://github.com/hexojs/hexo/issues/1007" target="_blank" rel="external">Open markdown file after running hexo new?</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>注意：<br>1.修改配置文件时注意<code>YAML语法</code>，参数<code>冒号:</code>后一定要留<code>空格</code><br>2.若出现中文乱码请修改文件编码格式为<code>UTF-8</code></p>
<h1 id="hexo目录介]]>
    </summary>
    
      <category term="Hexo" scheme="http://madreambubble.github.io/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[GitHub+Hexo搭建个人博客]]></title>
    <link href="http://madreambubble.github.io/2015/05/07/Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://madreambubble.github.io/2015/05/07/Github-Hexo搭建个人博客/</id>
    <published>2015-05-07T15:30:17.000Z</published>
    <updated>2015-05-18T06:21:42.392Z</updated>
    <content type="html"><![CDATA[<p>刚入驻GitHub的菜鸟一枚，第一篇博文就用来做搭建博客的笔记吧~</p>
<p>本文针对<code>windows</code>平台和<code>Hexo 3.x</code></p>
<h1 id="环境准备，搭建本地博客">环境准备，搭建本地博客</h1><h2 id="安装Node-js">安装Node.js</h2><p><a href="https://nodejs.org/download/" target="_blank" rel="external">Node.js官网下载</a></p>
<h2 id="安装Git">安装Git</h2><p><a href="http://git-scm.com/downloads" target="_blank" rel="external">Git官网下载</a></p>
<ol>
<li>cmd下使用Git命令<br> 配置系统环境变量Path，添加如下2个路径，路径之间用英文分号”;”隔开<ul>
<li>git安装路径中bin的位置，如：<code>D:\Program Files\Git\bin</code></li>
<li>git安装路径中git-core的位置，如：<code>D:\Program Files\Git\libexec\git-core</code></li>
</ul>
</li>
<li>Git Bash下使用Git命令(本文使用此方法)<ul>
<li>双击桌面上的”Git Bash”</li>
<li>在桌面或文件夹任意空白处点击鼠标右键，选择”Git Bash”</li>
</ul>
</li>
</ol>
<h2 id="安装Hexo，搭建本地博客">安装Hexo，搭建本地博客</h2><p>打开Git Bash，执行如下命令</p>
<pre><code>npm <span class="keyword">install</span> -g hexo
</code></pre><ol>
<li><p>创建hexo文件夹<br>安装完成后，根据自己的喜好建立hexo目录（如H:\hexo），在此目录空白处右键打开Git Bash执行以下命令，Hexo即会自动在此目录建立网站所需要的所有文件。</p>
<pre><code><span class="title">hexo</span> init
</code></pre></li>
<li>安装依赖包<pre><code>npm <span class="keyword">install</span>
</code></pre></li>
<li><p>本地查看<br>现在我们已经搭建起本地的hexo博客了，在hexo目录执行以下命令</p>
<pre><code>hexo generate
hexo <span class="keyword">server</span>
</code></pre><p>然后到浏览器输入<code>localhost:4000</code>查看博客。</p>
</li>
</ol>
<h1 id="配置SSH_keys">配置SSH keys</h1><p><a href="https://help.github.com/articles/generating-ssh-keys/" target="_blank" rel="external">官方教程</a></p>
<ol>
<li>检查SSH keys的设置<pre><code>$ <span class="built_in">cd</span> ~/.ssh
</code></pre>如果显示<code>No such file or directory</code>说明你是第一次使用git，跳到第3步，否则继续。</li>
<li><p>备份和移除原来的SSH Key设置<br>因为已经存在key文件，所以需要备份旧的数据并删除：</p>
<pre><code><span class="variable">$ </span>ls
config  id_rsa  id_rsa.pub  known_hosts
<span class="variable">$ </span>mkdir key_backup
<span class="variable">$ </span>cp id_rsa* key_backup
<span class="variable">$ </span>rm id_rsa*
</code></pre></li>
<li><p>生成新的SSH Key<br>执行如下命令，邮箱地址为自己的邮箱地址（经常使用的，不一定是github的），需要输入文件名的时候，回车即可。</p>
<pre><code>$ ssh-keygen -t rsa -C <span class="string">"邮件地址@youremail.com"</span>
Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa <span class="keyword">key</span> pair.
Enter file <span class="keyword">in</span> which <span class="keyword">to</span> save the <span class="keyword">key</span> (/Users/your_user_directory/.ssh/id_rsa):&lt;回车&gt;
</code></pre><p>系统提示你输入加密串，这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。<br>注意：输入密码的时候没有*星号的，直接输入就可以了。</p>
<pre><code>Enter passphrase (empty <span class="keyword">for</span> no passphrase):<span class="variable">&lt;输入加密串&gt;</span>
Enter same passphrase again:<span class="variable">&lt;再次输入加密串&gt;</span>
</code></pre><p>最后看到这样的界面，SSH Key就设置成功了。<br><img src="http://ww4.sinaimg.cn/large/6b52694dgw1erw5pja0wpj20f70843zu.jpg" alt=""></p>
</li>
<li>添加SSH Key到GitHub<br>在本机设置SSH Key之后，需要添加到GitHub上。<br>用文本编辑工具打开<code>id_rsa.pub</code>文件（路径在第3步里<code>Enter file in which to save the key</code>可以查看），如果看不到这个文件，你需要设置显示隐藏文件(若找不到，可用文件搜索功能搜索)。<br>在GitHub的主页右上角上点击设置按钮，选择<code>SSH Keys</code>项，把<code>id_rsa.pub</code>文件的内容复制进去，点击<code>Add Key</code>按钮即可。</li>
<li><p>测试<br>执行如下命令，看看设置是否成功，<code>git@github.com</code>的部分不要修改：</p>
<pre><code><span class="variable">$ </span>ssh -<span class="constant">T </span>git<span class="variable">@github</span>.com
</code></pre><p>如果出现如下提示</p>
<pre><code>The authenticity <span class="keyword">of</span> host <span class="comment">'github.com (207.97.227.239)' can't be established.</span>
RSA <span class="keyword">key</span> fingerprint <span class="keyword">is</span> <span class="number">16</span>:<span class="number">27</span>:ac:a5:<span class="number">76</span>:<span class="number">28</span>:<span class="number">2</span>d:<span class="number">36</span>:<span class="number">63</span>:<span class="number">1</span>b:<span class="number">56</span>:<span class="number">4</span>d:eb:df:a6:<span class="number">48.</span>
Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no)?
</code></pre><p>输入yes，然后会看到</p>
<pre><code>Hi cnfeat! You've successfully authenticated, <span class="keyword">but</span> GitHub <span class="keyword">does</span> <span class="keyword">not</span> provide shell access.
</code></pre><p>现在你已经可以通过SSH链接到GitHub了。</p>
</li>
<li><p>设置用户信息<br>Git会根据用户名和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，执行如下命令设置个人信息，把<code>username</code>和<code>邮箱</code>替换成你的用户名和邮箱。</p>
<pre><code>$ git config --global user<span class="class">.name</span> <span class="string">"username"</span>
$ git config --global user<span class="class">.email</span> <span class="string">"your_email@youremail.com"</span>
</code></pre><p>SSH Key配置成功，本机已成功连接到GitHub。</p>
</li>
</ol>
<h1 id="部署到GitHub">部署到GitHub</h1><p>与GitHub建立好链接之后，就可以方便的使用它提供的Pages服务，GitHub Pages分两种，一种是你的GitHub用户名建立的username.github.io这样的用户&amp;组织页（站），另一种是依附项目的pages。<br>想建立个人博客是用的第一种，形如username.github.io这样的可访问的站，每个用户名下面只能建立一个。</p>
<ol>
<li>创建repository<br>在自己GitHub主页右下角，创建一个新的repository，名为<code>username.github.io</code>，其中username替换为你的GitHub用户名<br><img src="http://ww4.sinaimg.cn/large/6b52694dgw1erw4iiu31hj208z03lmxh.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/large/6b52694dgw1erw4iu112xj20a901wt8u.jpg" alt=""></li>
<li>生成pages<br>创建好repository后，点击repository右侧的<code>Settings</code>，下拉，点击<code>Automatic page generator</code><br><img src="http://ww4.sinaimg.cn/large/6b52694dgw1erw4l8hhy0j20jn04z75b.jpg" alt=""><br>点击<img src="http://ww4.sinaimg.cn/large/96e8f43agw1erx03f4170j204100y3yc.jpg" alt=""><br>选择合适的主题，点击<img src="http://ww1.sinaimg.cn/large/6b52694dgw1erw4o1fm0aj202z00vt8i.jpg" alt=""><br>好了，在浏览器打开你的”username.github.io”，页面已生成。</li>
<li><p>配置<code>hexo\_config.yml</code>文件<br>打开<code>hexo\_config.yml</code>文件，底部编辑</p>
<pre><code><span class="attribute">deploy</span>:
    <span class="attribute">type</span>: git
    <span class="attribute">repository</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:username/username.github.com.git
    <span class="attribute">branch</span>: master
</code></pre><p>其中username替换为你的GitHub用户名。<br>Git Bash执行以下命令即可完成部署，注意部署会覆盖掉你之前在版本库中存放的文件。</p>
<pre><code><span class="title">hexo</span> clean
hexo generate
hexo deploy
</code></pre><p>此时，在博客的根目录下会生成一个文件夹：<code>.deploy</code>。<br>或可加入<code>—generate</code>选项，在部署前自动生成文件。</p>
<pre><code>hexo deploy <span class="comment">--generate</span>
</code></pre><p>简写：</p>
<pre><code>hexo <span class="keyword">d</span> --<span class="keyword">g</span>
</code></pre><p>其原理就是hexo在执行hexo generate时会在本地先把博客生成的一套静态站点放到public文件夹中，在执行hexo deploy时将其复制到.deploy文件夹中。<br>至此，我们的博客已经完全搭建起来了，在浏览器访问username.github.io就能看到你的成就了！</p>
</li>
</ol>
<blockquote>
<p>记住：每次修改本地文件后，需要hexo generate才能保存。每次使用命令时，都要在H:\hexo目录下。</p>
</blockquote>
<h1 id="Tips">Tips</h1><ol>
<li>若右键菜单中没有<code>git bash</code>选项，可以进入开始菜单找到git bash，然后通过cd进入相应目录执行命令。</li>
<li>在github部署完成之后，马上访问可能出现<code>404错误</code>，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是你没有验证Github发给你的邮件。</li>
<li>如果在hexo d之后出现<code>fatal: &#39;username.github.io&#39; does not appear to be a git repository</code>，一是检查 repo 的名字是否合乎规范、是否含有大写字母、config.yml 中的 deploy 配置是否正确，二是把 git bash 关掉，重新打开再执行命令。</li>
<li>在要求输入密码时，你输入之后密码是不显示的，这是为了安全，并非是你没输上。</li>
<li>出现乱码的，推荐使用 sublime text或者Notepad++编辑文件，记住将文件编码转为<code>UTF-8</code>。</li>
<li>安装 hexo 时卡在那儿不动，很可能是网络不给力，能全局 break wall 就好了。</li>
<li>遇到什么其他的问题，不妨删除<code>.deploy</code>和<code>db.json</code>再重新生成试一试。</li>
<li>有的时候当你修改页面或更改配置后发现并没有立即生效，可以执行<code>hexo clean</code>然后再启动<code>hexo server</code>。</li>
<li><code>hexo deploy</code>时，有时会出现这个提示信息<code>warning: LF will be replaced by CRLF</code>，虽然看起来挺乱糟糟的，但不影响使用，可以忽略不计。若想不提示，可以使用如下方法：<ul>
<li>切换到博客的根目录，执行如下命令：<code>git config --global core.autocrlf false</code></li>
<li>删除掉该目录下的<code>.git</code>文件夹（可能是隐藏的），命令：<code>rm -rf .git</code></li>
<li>重新<code>git init</code> <code>hexo deploy</code>即可~</li>
</ul>
</li>
<li><code>hexo deploy</code>没反应，主要问题出在config.yml的deploy配置上。注意缩进，同时注意冒号后面要有一个空格。</li>
<li><code>hexo update -g</code>升级错误，hexo命令失效，可执行<code>npm install -g hexo</code>重新安装一遍hexo，效果跟升级一样。</li>
<li>搜索框进行搜索：没有结果。点击搜索后进入的google页面，搜索框里面若显示<code>site:yoursite.com</code>，这说明有个地方没有设置，打开hexo目录下的config文件，填写URL。</li>
<li>代码块中不显示行号，使用四个空格的方式标志代码块的确没行号，需要行号的要使用反引号的方式。</li>
</ol>
<h1 id="开启你的hexo旅程">开启你的hexo旅程</h1><h2 id="命令">命令</h2><h3 id="常用命令">常用命令</h3><pre><code>hexo <span class="keyword">new</span> <span class="string">"postName"</span> <span class="preprocessor">#新建文章</span>
hexo <span class="keyword">new</span> page <span class="string">"pageName"</span> <span class="preprocessor">#新建页面</span>
hexo generate <span class="preprocessor">#生成静态页面至public目录</span>
hexo <span class="keyword">server</span> <span class="preprocessor">#开启本地预览访问端口（默认端口4000，'ctrl + c'关闭server）</span>
hexo deploy <span class="preprocessor">#将.deploy目录部署到GitHub</span>
</code></pre><h3 id="常用复合命令">常用复合命令</h3><pre><code>hexo deploy -<span class="keyword">g</span>
hexo server -<span class="keyword">g</span>
</code></pre><h3 id="简写">简写</h3><pre><code>hexo <span class="variable">n =</span>= hexo new
hexo <span class="variable">g =</span>= hexo generate
hexo <span class="variable">s =</span>= hexo server
hexo <span class="variable">d =</span>= hexo deploy
</code></pre><h2 id="发表文章">发表文章</h2><p>在Git Bash中执行如下命令</p>
<pre><code><span class="title">hexo</span> n <span class="string">"文章标题"</span>
</code></pre><p>在<code>\hexo\source\_posts</code>中打开同名文件，编辑开头。</p>
<pre><code><span class="label">title:</span> 文章标题 <span class="preprocessor">#自定义</span>
<span class="label">date:</span> <span class="number">2015</span>-<span class="number">05</span>-<span class="number">08</span> <span class="number">07</span>:<span class="number">56</span>:<span class="number">29</span> <span class="preprocessor">#发表日期，一般不改动</span>
<span class="label">categories:</span> hexo <span class="preprocessor">#文章分类</span>
<span class="label">tags:</span> [tag1,tag2] <span class="preprocessor">#文章标签，多于一项时用这种格式</span>
---
<span class="preprocessor">#这里开始使用markdown格式输入你的正文。</span>
</code></pre><p>多个tag也可以这样写：</p>
<pre><code>tags:
-<span class="ruby"> tag1
</span>-<span class="ruby"> tag2</span>
</code></pre><h2 id="文章摘要">文章摘要</h2><p>在需要显示摘要的地方添加如下代码即可：</p>
<pre><code>#摘要
<span class="comment">&lt;!--more--&gt;</span>
#余下全文
</code></pre><p>more以上的部分会已摘要的形式显示，more以下内容查看全文时才显示。也可以在md文件中定义description。</p>
<h2 id="文章中插入图片">文章中插入图片</h2><p>使用markdown写文章，插入图片的格式为<code>![图片名称](链接地址)</code>。<br>这里的链接地址，对于hexo，有两种方式：</p>
<ul>
<li>使用本地路径：在<code>hexo/source</code>目录下新建一个<code>img</code>文件夹，将图片放入该文件夹下，插入图片时链接即为<code>\img\图片名称</code>。</li>
<li>使用图床，获取外链地址。比如<a href="http://weibotuchuang.sinaapp.com/" target="_blank" rel="external">微博图床</a>，将图片拖入区域中，会生成图片的URL，这就是链接地址。</li>
</ul>
<h1 id="参考资料">参考资料</h1><ul>
<li><a href="http://beiyuu.com/github-pages/" target="_blank" rel="external">使用Github Pages建独立博客</a></li>
<li><a href="http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="http://zipperary.com/2013/05/28/hexo-guide-2/" target="_blank" rel="external">hexo系列教程：（二）搭建hexo博客</a></li>
<li><a href="http://yangjian.me/workspace/building-blog-with-hexo/" target="_blank" rel="external">使用hexo搭建博客</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>刚入驻GitHub的菜鸟一枚，第一篇博文就用来做搭建博客的笔记吧~</p>
<p>本文针对<code>windows</code>平台和<code>Hexo 3.x</code></p>
<h1 id="环境准备，搭建本地博客">环境准备，搭建本地博客</h1><h2 id]]>
    </summary>
    
      <category term="Hexo" scheme="http://madreambubble.github.io/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://madreambubble.github.io/2015/05/05/hello-world/"/>
    <id>http://madreambubble.github.io/2015/05/05/hello-world/</id>
    <published>2015-05-05T14:38:18.000Z</published>
    <updated>2015-05-06T15:14:30.029Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>